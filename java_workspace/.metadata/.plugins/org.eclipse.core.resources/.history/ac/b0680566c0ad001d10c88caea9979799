/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package wai.com.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import wai.com.service.UserMngtService;

/**
 * @Class Name : UserMngtServiceImpl.java
 * @Description : UserMngt Service Implement Class
 * @Modification Information
 * @
 * @  수정일      수정자              수정내용
 * @ ---------   ---------   -------------------------------
 * @ 2022.05.19           최초생성
 *
 * @author 코아뱅크 기술연구소
 * @since 2022.05.19
 * @version 1.0
 * @see
 *
 * Copyright (C) by COREBANK All right reserved.
 */

@Repository
public class UserMngtServiceImpl implements UserMngtService	 {

	private static final Logger LOGGER = LoggerFactory.getLogger(UserMngtServiceImpl.class);

	@Autowired
	private UserMngtDAO userMngtDAO;
	
	/** 사용자 등록 */
	@Override
	public int registUser(Map<String, Object> map) throws Exception {
		return userMngtDAO.registUser(map);
	}

	/** 사용자 수정 */
	@Override
	public int updateUser(Map<String, Object> map) throws Exception {
		return userMngtDAO.updateUser(map);
	}
	
	/** 사용자 삭제 */
	@Override
	public int deleteUser(Map<String, Object> map) throws Exception {
		return userMngtDAO.deleteUser(map);
	}

	/** 사용자 목록 조회 */
	@Override
	public List<Map<String, Object>> selectUserList(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectUserList(map);
	}
	
	/** 사용자 존재 여부 조회 */
	@Override
	public HashMap<String, Object> selectUserChk(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectUserChk(map);
	}

	/** 사용자 조회 */
	@Override
	public HashMap<String, Object> userInq(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectUser(map);
	}

	/** 사용자 최종 로그인 시간 */
	@Override
	public void userUpdLastLoginUpd(Map<String, Object> map) throws Exception {
		userMngtDAO.userUpdLastLoginUpd(map);
	}

	/** 게시글 전체 조회 */
	@Override
	public List<Map<String, Object>> selectBoardTestList(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectBoardTestList(map);
	}
	
	/** 게시글 상세 조회 */
	@Override
	public Map<String, Object> selectBoardTestDetail(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectBoardTestDetail(map);
	}
	
	/** 게시글 등록 */
	@Override
	public int selectBoardTestInsert(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectBoardTestInsert(map);
	}
	
	/** 게시글 수정 */
	@Override
	public int selectBoardTestUpdate(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectBoardTestUpdate(map);
	}

	/** 게시글 삭제하기 */
	@Override
	public int selectBoardTestDelete(Map<String, Object> map) throws Exception {
		return userMngtDAO.selectBoardTestDelete(map);
	}

	@Override
	public List<Map<String, Object>> BoardTestSBday(Map<String, Object> map) throws Exception {
		return userMngtDAO.BoardTestSBday(map);
	}
	

}
