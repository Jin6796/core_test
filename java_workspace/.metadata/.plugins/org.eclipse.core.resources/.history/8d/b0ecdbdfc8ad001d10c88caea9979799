/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package wai.com.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.mapping.ParameterMapping;
import org.apache.ibatis.session.SqlSession;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Repository;

import egovframework.rte.psl.dataaccess.EgovAbstractDAO;

/**
 * @Class Name : UserMngtDAO.java
 * @Description : UserMngt DAO Class
 * @Modification Information
 * @
 * @  수정일      수정자              수정내용
 * @ ---------   ---------   -------------------------------
 * @ 2022.05.19           최초생성
 *
 * @author 코아뱅크 기술연구소
 * @since 2022.05.19
 * @version 1.0
 * @see
 *
 * Copyright (C) by COREBANK All right reserved.
 */

@Repository
public class UserMngtDAO extends EgovAbstractDAO {
	
	Logger logger = Logger.getLogger(UserMngtDAO.class);
	
	@Autowired
	private SqlSession SqlSession;
	
	/** 사용자 등록 */
	public int registUser(Map<String, Object> map) throws Exception {
//		sqlLog("registUser", map);
		return SqlSession.insert("wai.com.service.impl.userMngtMapper.registUser", map);
	}
	
	/** 사용자 수정 */
	public int updateUser(Map<String, Object> map) throws Exception {
//		sqlLog("updateUser", map);
		return SqlSession.update("wai.com.service.impl.userMngtMapper.updateUser", map);
	}
	
	/** 사용자 삭제 */
	public int deleteUser(Map<String, Object> map) throws Exception {
//		sqlLog("deleteUser", map);
		return SqlSession.delete("wai.com.service.impl.userMngtMapper.deleteUser", map);
	}

	/** 사용자 목록 조회 */
	public List<Map<String, Object>> selectUserList(Map<String, Object> map) throws Exception {
//		sqlLog("selectUserList", map);
		return SqlSession.selectList("wai.com.service.impl.userMngtMapper.selectUserList", map);
	}
	
	/** 사용자 존재 여부 조회 */
	public HashMap<String, Object> selectUserChk(Map<String, Object> map) throws Exception {
//		sqlLog("selectUserChk", map);
		return SqlSession.selectOne("wai.com.service.impl.userMngtMapper.selectUserChk", map);
	}
	
	/** 사용자 조회 */
	public HashMap<String, Object> selectUser(Map<String, Object> map) throws Exception {
//		sqlLog("selectUser", map);
	    return SqlSession.selectOne("wai.com.service.impl.userMngtMapper.selectUser", map);
	}
	
	/** 사용자 최종 로그인 시간 */
	public void userUpdLastLoginUpd(Map<String, Object> map) throws Exception {
//		sqlLog("updateUserLastLogin", map);
		SqlSession.selectOne("wai.com.service.impl.userMngtMapper.updateUserLastLogin", map);
	}
	private void sqlLog(String service, Map<String, Object> map) throws Exception {
		String sql = SqlSession.getConfiguration().getMappedStatement("wai.com.service.impl.userMngtMapper."+service).getBoundSql(map).getSql();
        List<ParameterMapping> parameterMappings = SqlSession.getConfiguration().getMappedStatement("wai.com.service.impl.userMngtMapper."+service).getBoundSql(map).getParameterMappings();
        for (ParameterMapping parameterMapping : parameterMappings) {
            String param = (String) map.get(parameterMapping.getProperty());
            sql = sql.replaceFirst("\\?", "'" + param + "'");
        }
        System.out.println("[" + service + "] : " + sql);
	}
	
	/** 게시판 테스트 조회 */
	public List<Map<String, Object>> selectBoardTestList(Map<String, Object> map) throws Exception {
		return SqlSession.selectList("wai.com.service.impl.userMngtMapper.selectBoardTestList", map);
	}

	/** 게시글 상세 조회 */
	public Map<String, Object> selectBoardTestDetail(Map<String, Object> map) throws Exception {
		// 확인용 콘솔로그
		logger.info(SqlSession.selectOne("wai.com.service.impl.userMngtMapper.selectBoardTestDetail", map));
		return SqlSession.selectOne("wai.com.service.impl.userMngtMapper.selectBoardTestDetail", map);
	}
	
	/** 게시글 등록하기 */
	public int selectBoardTestInsert(Map<String, Object> map) throws Exception {
		return SqlSession.insert("wai.com.service.impl.userMngtMapper.selectBoardTestInsert", map);
	}
	
	/** 게시글 수정하기 */
	public int selectBoardTestUpdate(Map<String, Object> map) throws Exception {
		int result = 0;
		try {
			result = SqlSession.update("selectBoardTestUpdate", map);
		} catch (DataAccessException e) {
			System.out.println("에러 내용: "+e.toString());
		}
		return result;
	}

	/** 게시글 삭제하기 */
	public int selectBoardTestDelete(Map<String, Object> map) {
		return SqlSession.delete("wai.com.service.impl.userMngtMapper.selectBoardTestDelete", map);
	}
	
	/** 일별 게시글 조회 */
	public List<Map<String, Object>> BoardTestSBday(Map<String, Object> map) {
		return SqlSession.selectList("wai.com.service.impl.userMngtMapper.BoardTestSBday", map);
	}

	public List<Map<String, Object>> BoardTestSBdaySelect(Map<String, Object> map) {
		// TODO Auto-generated method stub
		return null;
	}
	

}
